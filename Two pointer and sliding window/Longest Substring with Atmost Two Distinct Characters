Longest Substring with Atmost Two Distinct Characters
You are given a string ‘S’, you need to find the length of the longest substring that contains at most two distinct characters.
Note:
A string ‘B’ is a substring of a string ‘A’ if ‘B’ that can be obtained by deletion of, several characters(possibly none) from the start of ‘A’ and several characters(possibly none) from the end of ‘A’. 


#include<unordered_map>
int lengthOfLongestSubstring(string s) {
    // Write your code here.
    
        
    int ans = 0;
    unordered_map<char, int> m;
    int n = s.size();
    int x = 0;
    for (int j = 0, i = 0; j < n; j++) 
    {
         m[s[j]]++;
         if (m[s[j]] == 1)
            x++;
         while (x > 2 && i <= j) {
            m[s[i]]--;
            if (m[s[i]] == 0)
               x--;
            i++;
         }
           ans = max(ans, j - i + 1);
      }
      return ans;
   
}
