Overlapping Intervals
Send Feedback
You have been given the start and end times of 'N' intervals. Write a function to check if any two intervals overlap with each other.
Note :
If an interval ends at time T and another interval starts at the same time, they are not considered overlapping intervals.

Constraints :
1 <= T <= 10^2
0 <= N <= 10^5
0 <= Start[i] <= 10^15
1 <= End[i] <= 10^15  

Time Limit: 1 sec
Sample Input 1 :
1
3
1 2 3
2 3 4
Sample Output 1 :
false
Explanation For Sample Input 1:
Here, in given intervals [1, 2], [2, 3], [3, 4], there are no overlapping intervals present.
Sample Input 2 :
2
1
100
200
2
2 1
3 4
Sample Output 2 :
false
true

#include <bits/stdc++.h>
#include <vector>
bool checkOverlappingIntervals(long* start, long* end, int n)
{
    //Write your code here 
//     int a= sizeof(start)/sizeof(start[0]);
//     int b= sizeof(end)/sizeof(end[0]);
    
//     int count=0;
//     sort(start, start+a);
//     sort(end, end+b);
    
//     for(int i=1;i<n;i++)
//     {
//         if(start[i]<end[i-1])
//             return true;
//     }
//     return false;
    
    vector<pair<long,long>>m;

    for(int i=0;i<n;i++){

        m.push_back({start[i],end[i]});

    }

    sort(m.begin(),m.end());

    for(int i=1;i<n;i++){

        if(m[i].first<m[i-1].second){

            return true;

        }

    }

    return false;
}
